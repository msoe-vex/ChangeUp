<launch>
  <!-- the primary port that allows rosserial to function -->
  <arg name="mainport" default="/dev/ttyS11" />
  <arg name="mainbaud" default="115200" />

  <node name="connector" type="serial_node.py" pkg="rosserial_arduino" respawn="true" output="screen">
    <param name="port" value="$(arg mainport)" />
    <param name="baud" value="$(arg mainbaud)" />
  </node>

  <!-- Nodes for zeroing out the potentiometers -->
  <node name="zero_left_module_pot_node" type="zero_swerve_pot_node" pkg="change_up_driver_control" respawn="true" output="screen">
    <remap from="/inputPot" to="/sensor/leftModulePot"/>
    <remap from="/outputPot" to="/sensor/zeroedLeftModulePot"/>
  </node>

  <node name="zero_right_module_pot_node" type="zero_swerve_pot_node" pkg="change_up_driver_control" respawn="true" output="screen">
    <remap from="/inputPot" to="/sensor/rightModulePot"/>
    <remap from="/outputPot" to="/sensor/zeroedRightModulePot"/>
  </node>

  <node name="zero_rear_module_pot_node" type="zero_swerve_pot_node" pkg="change_up_driver_control" respawn="true" output="screen">
    <remap from="/inputPot" to="/sensor/rearModulePot"/>
    <remap from="/outputPot" to="/sensor/zeroedRearModulePot"/>
  </node>

  <!-- Nodes for controlling the swerve drive -->
  <node name="left_module_controller_node" type="swerve_controller_node" pkg="swerve_controller" respawn="true" output="screen">
    <param name="module_x" type="double" value="-5.25"/>
    <param name="module_y" type="double" value="5.55"/>
    <remap from="/leftMotor" to="/motor/leftModule1/moveMotorVoltage"/>
    <remap from="/rightMotor" to="/motor/leftModule2/moveMotorVoltage"/>
    <remap from="/swerveCommandActAngle" to="/sensor/zeroedLeftModulePot"/>
  </node>

  <!-- <node name="right_module_controller_node" type="swerve_controller_node" pkg="swerve_controller" respawn="true" output="screen">
    <param name="right_module_x" type="double" value="5.25"/>
    <param name="right_module_y" type="double" value="5.55"/>
    <remap from="/leftMotor" to="/motor/rightModule1/moveMotorVoltage"/>
    <remap from="/rightMotor" to="/motor/rightModule2/moveMotorVoltage"/>
    <remap from="/swerveCommandActAngle" to="/sensor/zeroedRightModulePot"/>
  </node>

  <node name="rear_module_controller_node" type="swerve_controller_node" pkg="swerve_controller" respawn="true" output="screen">
    <param name="rear_module_x" type="double" value="0"/>
    <param name="rear_module_y" type="double" value="-5.21"/>
    <remap from="/leftMotor" to="/motor/rearModule1/moveMotorVoltage"/>
    <remap from="/rightMotor" to="/motor/rearModule2/moveMotorVoltage"/>
    <remap from="/swerveCommandActAngle" to="/sensor/zeroedRearModulePot"/>
  </node> -->

  <!-- Node for Driver Control state machine -->
  <node name="change_up_driver_control_node" type="change_up_driver_control_node" pkg="change_up_driver_control" respawn="true" output="screen"/>

  <!-- Node for field oriented drive -->
  <node name="field_oriented_control_node" type="field_oriented_control_node" pkg="change_up_driver_control" respawn="true" output="screen"/>

  <!-- Node for NavX data -->
  <!-- <node name="navx_publisher_node" type="navx_publisher" pkg="navx_publisher_node" output="screen">
    <param name="device" value="/dev/ttyACM2"/>
  </node> -->
  
  <arg name="topicstolog" value="sensor/leftModulePot" />
  <node pkg="rostopic" type="rostopic" name="logresults" args="echo $(arg topicstolog)" output="screen" />

</launch>
